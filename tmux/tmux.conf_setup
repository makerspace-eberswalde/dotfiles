set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Reload the file with Prefix r.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Splitting windows
bind | split-window -h
bind - split-window -v

# Moveing between windows.
bind -r h select-window -t :-
bind -r l select-window -t :+
bind -r o resize-pane -Z

# Log output to a text file on demand.
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Mouse support - set to on if you want to use the mouse.
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

# Set the default terminal mode to 256color mode.
set -g default-terminal "screen-256color"

# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on

# Pane colors.
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg colour226

# Command / message line.
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Vimlike copy mode.
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
#bind-key -Tcopy-mode-vi 'v' send -X begin-selection
#bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Enable vi keys.
setw -g mode-keys vi

# Status bar
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour226,bold]#[fg=colour226,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold]#[fg=colour235,bg=colour226,bold] #(whoami)#[fg=colour238,bg=colour226,nobold] #[fg=colour235,bg=colour252,bold]'
set -g status-right '#[fg=colour226, bg=colour234]#[fg=colour234,bg=colour226]#(uptime | grep -oP load.+) '
set -g window-status-format "|#[fg=white]#[fg=white,bg=colour234] #I #W"
set -g window-status-current-format "#[fg=white]|#[fg=white] #[fg=colour235,bg=colour226]#[fg=colour235,bg=colour226,noreverse,bold] #I #W #[fg=colour226,bg=colour234,nobold]"

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# https://til.hashrocket.com/posts/f4e777f1f5-fix-tmux-21-mode-mouse-error
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;

# https://coderwall.com/p/4b0d0a/how-to-copy-and-paste-with-tmux-on-ubuntu 
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

#set inactive/active window styles
#set -g window-style 'fg=colour247,bg=colour236'
#set -g window-active-style 'fg=colour250,bg=black'

bind -n C-q copy-mode
bind-key -t vi-copy o copy-selection
bind-key -t vi-copy o copy-pipe "xclip -sel clip -i"
bind-key -t vi-copy o copy-pipe "xargs -I{} tmux send-keys -t 1 ';call OpenTestFile(\"{}\")' Enter && tmux select-pane -t 1"
#bind-key -t vi-copy o copy-pipe "xargs -I{} -L 10000 tmux send-keys -t 1 ';call OpenTestFile(\"{}\")' Enter && tmux select-pane -t 1"
#bind-key -t vi-copy o copy-pipe "xargs -I{} tmux send-keys -t 1 ';call OpenTestFile(\"{}\")' Enter"
#bind-key -t vi-copy o copy-pipe "tmux send-keys -t 1 ';call OpenTestFile(\"{}\")' Enter"

# http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind C-w kill-window
bind C-p kill-pane
